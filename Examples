r"""
sage: P = polytopes.hypercube(1); P.rename('P')
sage: Q = polytopes.hypercube(1, 'zero_one'); Q.rename('Q')
sage: R = Polyhedron(vertices = [[2], [3]]); R.rename('R')
sage: from sage.geometry.polyhedron.modules.formal_polyhedra_module import FormalPolyhedraModule
sage: M = FormalPolyhedraModule(QQ,1,[P] + [Q] + [R])
sage: m = M.basis()
sage: N = M.submodule([m[P]+m[Q], 2*m[Q]-m[R]])
sage: L = ['x', 'y', 'z']
sage: N_L = N.extend_basis(L)
sage: N_L
Free module generated by {0, 1, 2, 3, 4} over Rational Field
sage: list(N_L.lift(b) for b in N_L.basis())
[B['x'], B['y'], B['z'], B[P] + 1/2*B[R], B[Q] - 1/2*B[R]]
"""